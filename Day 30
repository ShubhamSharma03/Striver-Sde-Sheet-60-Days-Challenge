Ques 1:- Two Sum IV - Input is a BST

Code:- 

class Solution {
    void inorder(TreeNode* root, vector<int> &res)
    {
        if(root==NULL) return;
        inorder(root->left,res);
        res.push_back(root->val);
        inorder(root->right,res);
    }
    
public:
    bool findTarget(TreeNode* root, int k) {
        vector<int> res;
        inorder(root,res);
        int front=0;
        int rear=res.size()-1;
        
        while(front<rear)
        {
            if(res[front]+res[rear]==k) return true;
            if(res[front]+res[rear]>k) rear--;
            else front++;
        }
        
        return false;
    }
};

Ques 2:- Binary Tree to Double Linked List	

Code:- 

class Solution {
public:
    void flatten(TreeNode* root) {
        stack<TreeNode*> st;
        
        if(!root) return;
        st.push(root);
        
        while(!st.empty())
        {
            TreeNode* curr=st.top();
            st.pop();
            
            if(curr->right) st.push(curr->right);
            if(curr->left)  st.push(curr->left);
            if(!st.empty()) curr->right=st.top();
            
            curr->left=NULL;
        }
        
    }
};



